<START_CONSTANTS>

CUST_CINV:1 ;Used with Customize= command.>Syntax: Customize=CUST_CINV, Enabled (CINV_TRUE/FALSE)>>This is used to disable the classic inventory.>>You can use one such command per level.>>Enabled (CINV_TRUE/FALSE) field>------------------------------->Set to false to disable the classic ring inventory and restore the TR4 flat inventory for the current level.>>Type IGNORE to use default value (true).>>Example:>Customize= CUST_CINV, CINV_FALSE

CUST_CINV_RING:2 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_RING, RingId (CINV_RING_...), NameStringIndex>>This is used to customize ring names for the classic inventory.>>You can use one such command per ring per level.>>RingId (CINV_RING_...) field>---------------------------->The ring to customize.>>See the CINV_RING_ constants in the Reference panel of NG_Center.>>NameStringIndex field>--------------------->The string index to use for the name.>>See the Strings panel of NG_Center. ExtraNG strings need 359 added to their index.>>Type IGNORE to use default value.>>Examples:>Customize= CUST_CINV_RING, CINV_RING_INVENTORY, 186>Customize= CUST_CINV_RING, CINV_RING_MISC1, 359+0

CUST_CINV_ITEM:3 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_ITEM, ItemId (CINV_ITEM_...), NameStringIndex, DescriptionStringIndex>>This is used to customize item names and descriptions for the classic inventory.>>You can use one such command per item per level.>>Note: This command is required for new items (CINV_ITEM_NEW...).>>ItemId (CINV_ITEM_...) field>---------------------------->The item to customize.>>See the CINV_ITEM_ constants in the Reference panel of NG_Center.>>NameStringIndex field>--------------------->The string index to use for the name.>>See the Strings panel of NG_Center. ExtraNG strings need 359 added to their index.>>Type IGNORE to use default value.>>DescriptionStringIndex field>---------------------->The string index to use for the description.>>See the Strings panel of NG_Center. ExtraNG strings need 359 added to their index.>>Type IGNORE to use default value.>>Examples:>Customize= CUST_CINV_ITEM, CINV_ITEM_EXAMINE1, 102, 359+28>Customize= CUST_CINV_ITEM, CINV_ITEM_PISTOLS, IGNORE, 359+24>Customize= CUST_CINV_ITEM, CINV_ITEM_NEW1, 100, IGNORE>

CUST_CINV_ITEM_RING:4 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_ITEM_RING, ItemId (CINV_ITEM_...), RingId (CINV_RING_...), SortIndex>>This is used to customize the ring items are assigned to for the classic inventory.>>You can use one such command per item per level.>>By default new items (CINV_ITEM_NEW...) are assigned to CINV_RING_INVENTORY and added after existing items.>>ItemId (CINV_ITEM_...) field>---------------------------->The item to assign.>>See the CINV_ITEM_ constants in the Reference panel of NG_Center.>>RingId (CINV_RING_...) field>---------------------------->The ring to assign the item to.>>See the CINV_RING_ constants in the Reference panel of NG_Center.>>SortIndex field>--------------->The order of the item on the ring.>>Starts at 0 and increases clockwise.>>Below are the default sort indexes per ring:>>CINV_RING_OPTIONS:>0: CINV_ITEM_MEMCARD_LOAD_INV>1: CINV_ITEM_MEMCARD_SAVE_INV>>CINV_RING_INVENTORY:>0: CINV_ITEM_COMPASS>1: CINV_ITEM_PISTOLS>2: CINV_ITEM_PISTOLS_AMMO>3: CINV_ITEM_SHOTGUN>4: CINV_ITEM_SHOTGUN_AMMO1>5: CINV_ITEM_SHOTGUN_AMMO2>6: CINV_ITEM_UZI>7: CINV_ITEM_UZI_AMMO>8: CINV_ITEM_REVOLVER>9: CINV_ITEM_REVOLVER_LASERSIGHT_COMBO>10: CINV_ITEM_REVOLVER_AMMO>11: CINV_ITEM_CROSSBOW12: CINV_ITEM_CROSSBOW_LASERSIGHT_COMBO>13: CINV_ITEM_CROSSBOW_AMMO1>14: CINV_ITEM_CROSSBOW_AMMO2>15: CINV_ITEM_CROSSBOW_AMMO3>16: CINV_ITEM_GRENADE_GUN>17: CINV_ITEM_GRENADE_GUN_AMMO1>18: CINV_ITEM_GRENADE_GUN_AMMO2>19: CINV_ITEM_GRENADE_GUN_AMMO3>20: CINV_ITEM_LASERSIGHT>21: CINV_ITEM_CROWBAR>22: CINV_ITEM_BINOCULARS>23: CINV_ITEM_FLARE_INV>24: CINV_ITEM_BIGMEDI>25: CINV_ITEM_SMALLMEDI>>CINV_RING_ITEMS:>0: CINV_ITEM_PUZZLE1>1: CINV_ITEM_PUZZLE2>2: CINV_ITEM_PUZZLE3>3: CINV_ITEM_PUZZLE4>4: CINV_ITEM_PUZZLE5>5: CINV_ITEM_PUZZLE6>6: CINV_ITEM_PUZZLE7>7: CINV_ITEM_PUZZLE8>8: CINV_ITEM_PUZZLE9>9: CINV_ITEM_PUZZLE10>10: CINV_ITEM_PUZZLE11>11: CINV_ITEM_PUZZLE12>12: CINV_ITEM_PUZZLE1_COMBO1>13: CINV_ITEM_PUZZLE1_COMBO2>14: CINV_ITEM_PUZZLE2_COMBO1>15: CINV_ITEM_PUZZLE2_COMBO2>16: CINV_ITEM_PUZZLE3_COMBO1>17: CINV_ITEM_PUZZLE3_COMBO2>18: CINV_ITEM_PUZZLE4_COMBO1>19: CINV_ITEM_PUZZLE4_COMBO2>20: CINV_ITEM_PUZZLE5_COMBO1>21: CINV_ITEM_PUZZLE5_COMBO2>22: CINV_ITEM_PUZZLE6_COMBO1>23: CINV_ITEM_PUZZLE6_COMBO2>24: CINV_ITEM_PUZZLE7_COMBO1>25: CINV_ITEM_PUZZLE7_COMBO2>26: CINV_ITEM_PUZZLE8_COMBO1>27: CINV_ITEM_PUZZLE8_COMBO2>28: CINV_ITEM_KEY1>29: CINV_ITEM_KEY2>30: CINV_ITEM_KEY3>31: CINV_ITEM_KEY4>32: CINV_ITEM_KEY5>33: CINV_ITEM_KEY6>34: CINV_ITEM_KEY7>35: CINV_ITEM_KEY8>36: CINV_ITEM_KEY9>37: CINV_ITEM_KEY10>38: CINV_ITEM_KEY11>39: CINV_ITEM_KEY12>40: CINV_ITEM_KEY1_COMBO1>41: CINV_ITEM_KEY1_COMBO2>42: CINV_ITEM_KEY2_COMBO1>43: CINV_ITEM_KEY2_COMBO2>44: CINV_ITEM_KEY3_COMBO1>45: CINV_ITEM_KEY3_COMBO2>46: CINV_ITEM_KEY4_COMBO1>47: CINV_ITEM_KEY4_COMBO2>48: CINV_ITEM_KEY5_COMBO1>49: CINV_ITEM_KEY5_COMBO2>50: CINV_ITEM_KEY6_COMBO1>51: CINV_ITEM_KEY6_COMBO2>52: CINV_ITEM_KEY7_COMBO1>53: CINV_ITEM_KEY7_COMBO2>54: CINV_ITEM_KEY8_COMBO1>55: CINV_ITEM_KEY8_COMBO2>56: CINV_ITEM_PICKUP1>57: CINV_ITEM_PICKUP2>58: CINV_ITEM_PICKUP3>59: CINV_ITEM_PICKUP4>60: CINV_ITEM_PICKUP1_COMBO1>61: CINV_ITEM_PICKUP1_COMBO2>62: CINV_ITEM_PICKUP2_COMBO1>63: CINV_ITEM_PICKUP2_COMBO2>64: CINV_ITEM_PICKUP3_COMBO1>65: CINV_ITEM_PICKUP3_COMBO2>66: CINV_ITEM_PICKUP4_COMBO1>67: CINV_ITEM_PICKUP4_COMBO2>68: CINV_ITEM_QUEST1>69: CINV_ITEM_QUEST2>70: CINV_ITEM_QUEST3>71: CINV_ITEM_QUEST4>72: CINV_ITEM_QUEST5>73: CINV_ITEM_QUEST6>74: CINV_ITEM_EXAMINE1>75: CINV_ITEM_EXAMINE2>76: CINV_ITEM_EXAMINE3>77: CINV_ITEM_WATERSKIN1_EMPTY>78: CINV_ITEM_WATERSKIN1_1>79: CINV_ITEM_WATERSKIN1_2>80: CINV_ITEM_WATERSKIN1_3>81: CINV_ITEM_WATERSKIN2_EMPTY>82: CINV_ITEM_WATERSKIN2_1>83: CINV_ITEM_WATERSKIN2_2>84: CINV_ITEM_WATERSKIN2_3>85: CINV_ITEM_WATERSKIN2_4>86: CINV_ITEM_WATERSKIN2_5>87: CINV_ITEM_CLOCKWORK_BEETLE>88: CINV_ITEM_CLOCKWORK_BEETLE_COMBO1>89: CINV_ITEM_CLOCKWORK_BEETLE_COMBO2>>Examples:>Customize= CUST_CINV_ITEM_RING, CINV_ITEM_COMPASS, CINV_RING_MISC1, IGNORE>Customize= CUST_CINV_ITEM_RING, CINV_ITEM_PUZZLE3, CINV_RING_INVENTORY, 23>

CUST_CINV_ITEM_MODEL:5 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_ITEM_MODEL, ItemId (CINV_ITEM_...), Type (CINV_MODEL_...), SlotId, SpriteId, SizeX, SizeY, MeshMask, {Type, Slot, Sprite, Size and Mask array}>>This is used to customize item 3D/2D models for the classic inventory.>>You can use one such command per item per level. Multiple types can be customized per command.>>By default new items (CINV_ITEM_NEW...) will use the model of LARA_START_POS.>>ItemId (CINV_ITEM_...) field>---------------------------->The item to customize.>>See the CINV_ITEM_ constants in the Reference panel of NG_Center.>>Type (CINV_MODEL_...) field>--------------------------->The type of model to customize.>>See the CINV_MODEL_ constants in the Reference panel of NG_Center.>>SlotId field>------------>The ID of the slot to use as model.>>See the SLOT MOVEABLES list in the Reference panel of NG_Center.>>SpriteId field>-------------->If the SlotId field is for a sprite slot, you can specify the ID of the sprite to use here.>>Type IGNORE if not using a sprite.>>Note: This only works for the CINV_MODEL_PICKUP type.>>SizeX field>----------->If a SpriteId has been specified, you can specify the width of the sprite here in screen units (0-1000).>>Type IGNORE if not using a sprite.>>SizeY field>----------->If a SpriteId has been specified, you can specify the height of the sprite here in screen units (0-1000).>>Type IGNORE if not using a sprite.>>MeshMask field>-------------->This is a bit mask value used to specify which meshes are visible.>>Each bit corresponds to a mesh. For example, to only show the first, second and fourth mesh, use the following value:>1+2+8>>Type IGNORE to use default value.>>Note: This does not work for the CINV_MODEL_PICKUP type.>>Examples:>Customize= CUST_CINV_ITEM_MODEL, CINV_ITEM_FLARE_INV, CINV_MODEL_IDLE, ANIMATING4_MIP, IGNORE, IGNORE, IGNORE, IGNORE>Customize= CUST_CINV_ITEM_MODEL, CINV_ITEM_PUZZLE1, CINV_MODEL_PICKUP, CUSTOM_SPRITES, 0, 80, 100, IGNORE>Customize= CUST_CINV_ITEM_MODEL, CINV_ITEM_NEW1,>		   CINV_MODEL_IDLE, DIARY_ITEM, IGNORE, IGNORE, IGNORE, IGNORE,>		   CINV_MODEL_ACTIVE, ANIMATING5_MIP, IGNORE, IGNORE, IGNORE, IGNORE

CUST_CINV_ITEM_DISPLAY:6 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_ITEM_DISPLAY, ItemId (CINV_ITEM_...), Type (CINV_DISPLAY_...), PosX, PosY, PosZ, PosIgnoreAnim (CINV_TRUE/FALSE), OrientX, OrientY, OrientZ, OrientIgnoreAnim (CINV_TRUE/FALSE), Tilt, Scale, Spin (CINV_TRUE/FALSE), FadeInOut (CINV_TRUE/FALSE), {Type, Pos, Orient, Tilt, Scale, Boolean and Boolean array}>>This is used to customize item displays for the classic inventory.>>You can use one such command per item per level. Multiple types can be customized per command.>>ItemId (CINV_ITEM_...) field>---------------------------->The item to customize.>>See the CINV_ITEM_ constants in the Reference panel of NG_Center.>>Type (CINV_DISPLAY_...) field>----------------------------->The type of display to customize.>>See the CINV_DISPLAY_ constants in the Reference panel of NG_Center.>>PosX field>---------->The relative position along the X-axis in game units (1024 = 1 sector) or absolute screen units (0-1000) if type is CINV_DISPLAY_PICKUP.>>Type IGNORE to use default value.>>PosY field>---------->The relative position along the Y-axis in game units (1024 = 1 sector) or absolute screen units (0-1000) if type is CINV_DISPLAY_PICKUP.>>Type IGNORE to use default value.>>PosZ field>---------->The relative position along the Z-axis in game units (1024 = 1 sector).>>Type IGNORE to use default value.>>Note: Not used for type CINV_DISPLAY_PICKUP.>>PosIgnoreAnim (CINV_TRUE/FALSE) field>------------------------------------->Set this to true to have positioning be relative to the item's 3D origin instead of the current animation frame.>>This is mostly used for items which are wall-mounted and positioned off-center from the start.>>Type IGNORE to use default value (false).>>Note: Not working with type CINV_DISPLAY_PICKUP.>>OrientX field>------------->The relative orientation around the X-axis in degrees (between -360 and 360).>>Type IGNORE to use default value.>>OrientY field>------------->The relative orientation around the Y-axis in degrees (between -360 and 360).>>Type IGNORE to use default value.>>OrientZ field>------------->The relative orientation around the Z-axis in degrees (between -360 and 360).>>Type IGNORE to use default value.>>OrientIgnoreAnim (CINV_TRUE/FALSE) field>---------------------------------------->Set this to true to have orientation be relative to the item's zero orientation instead of the current animation frame.>>Type IGNORE to use default value (false).>>Note: Not working with type CINV_DISPLAY_PICKUP.>>Tilt field>---------->This is a special rotation applied to items when they get activated to make it appear as if they're swinging out from their idle position.>Best to play around with this in conjunction with PosZ to see how it works.>Value is in degrees (between -360 and 360).>>Type IGNORE to use default value.>>Note: Not used for type CINV_DISPLAY_PICKUP.>>Scale field>----------->The scale of the item's model in percentage, 100 being default.>>Be careful with too large a value as it can cause rendering issues if the item model has shine applied.>>Type IGNORE to use default value.>>Spin (CINV_TRUE/FALSE) field>---------------------------->Set to false to disable the spinning when the item is selected.>>Type IGNORE to use default value (true).>>Note: Only working with type CINV_DISPLAY_IDLE.>>FadeInOut (CINV_TRUE/FALSE) field>--------------------------------->Set to false to disable the fade in/out effect when the item is picked up.>>Type IGNORE to use default value (true).>>Note: Only working with type CINV_DISPLAY_PICKUP.>>Examples:>Customize= CUST_CINV_ITEM_DISPLAY, CINV_ITEM_MEMCARD_LOAD_INV,>		   CINV_DISPLAY_IDLE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, 25, IGNORE, IGNORE,>		   CINV_DISPLAY_ACTIVE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, 25, IGNORE, IGNORE>>Customize= CUST_CINV_ITEM_DISPLAY, CINV_ITEM_PUZZLE2,>		   CINV_DISPLAY_IDLE, IGNORE, IGNORE, IGNORE, CINV_TRUE, IGNORE, -135, IGNORE, CINV_TRUE, IGNORE, IGNORE, IGNORE, IGNORE,>		   CINV_DISPLAY_ACTIVE, IGNORE, IGNORE, IGNORE, CINV_TRUE, IGNORE, -135, IGNORE, CINV_TRUE, IGNORE, IGNORE, IGNORE, IGNORE,>		   CINV_DISPLAY_CONTEXT, IGNORE, IGNORE, IGNORE, CINV_TRUE, IGNORE, -135, IGNORE, CINV_TRUE, IGNORE, IGNORE, IGNORE, IGNORE,>		   CINV_DISPLAY_PICKUP, 200, 200, IGNORE, IGNORE, IGNORE, -135, IGNORE, IGNORE, IGNORE, 50, IGNORE, CINV_FALSE>		   >Customize= CUST_CINV_ITEM_DISPLAY, CINV_ITEM_COMPASS,>		   CINV_DISPLAY_IDLE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, CINV_FALSE, IGNORE

CUST_CINV_ITEM_QUANTITY:7 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_ITEM_QUANTITY, ItemId (CINV_ITEM_...), MinQuantity, MaxQuantity, SupportsUnlimited (CINV_TRUE/FALSE), Divider, GetQuantityTriggerGroupId, SetQuantityTriggerGroupId>>This command allows you to use your own script variables to store item quantities for the classic inventory.>>Any variable can be used, except CurrentValue. CurrentValue will be used as the intermediate variable to transfer the values between your variables and the plugin. See the GetQuantityTriggerGroupId and SetQuantityTriggerGroupId fields on how this is done.>>Notes:>- You can use one such command per item per level.>>- If you're going to replace the existing TR4 inventory variables with your own, e.g. for pickup items, you will need to manage everything outside the inventory as the engine will still use the original variables.>>ItemId (CINV_ITEM_...) field>---------------------------->The item to customize.>>See the CINV_ITEM_ constants in the Reference panel of NG_Center.>>MinQuantity field>----------------->Specifies the minimum amount the quantity can be set to.>>Must be between 0 and the maximum the variable can support (up to a maximum of 32767).>>For example, if using a BYTE variable, the minimum can be between 0 and 255.>>Type IGNORE to use default value (0).>>MaxQuantity field>----------------->Specifies the maximum amount the quantity can be set to.>>Must be between 0 and the maximum the variable can support (up to a maximum of 32767).>>For example, if using a SHORT variable, the maximum can be between 0 and 32767.>>Type IGNORE to use default value (32767 for new items, i.e. CINV_ITEM_NEW...).>>SupportsUnlimited (CINV_TRUE/FALSE) field>----------------------------------------->Set to true to allow the quantity to be unlimited.>>Note: The stored value for unlimited is -1, thus your variable must support negative numbers.>>Type IGNORE to use default value (false for new items, i.e. CINV_ITEM_NEW...).>>Divider field>------------->This is primarily used when the displayed quantity should differ from the actual stored value.>>For example, the stored quantity of the TR4 shotgun ammo is 6 times that of the displayed value, thus a divider of 6 is used.>>Valid values are 1 to 32767.>>Type IGNORE to use default value (1 or 6 for shotgun normal and wideshot ammo).>>GetQuantityTriggerGroupId field>------------------------------->The ID of the TriggerGroup that will be called to get the current item quantity.>>Each time the plugin needs to know the current quantity of the item, it will call this TriggerGroup.>In the TriggerGroup you need to copy the current quantity from your variable to the CurrentValue variable.>The plugin will then use the value in CurrentValue as the quantity.>>Type IGNORE to use default.>>SetQuantityTriggerGroupId field>------------------------------->The ID of the TriggerGroup that will be called to update the current item quantity.>>Each time the plugin updates the quantity of the item, it will set the new quantity in the CurrentValue variable and then call this TriggerGroup.>In the TriggerGroup you need to copy the new quantity from the CurrentValue variable to your variable.>>Type IGNORE to use default.>>Examples:>Customize= CUST_CINV_ITEM_QUANTITY, CINV_ITEM_COMPASS, 0, 0, IGNORE, IGNORE, 1, IGNORE>Customize= CUST_CINV_ITEM_QUANTITY, CINV_ITEM_NEW1, 1, 1, IGNORE, IGNORE, 2, IGNORE>Customize= CUST_CINV_ITEM_QUANTITY, CINV_ITEM_NEW2, 0, 100, IGNORE, IGNORE, 3, 4>>TriggerGroup= 1, $2000, 232, $0FF ; set CurrentValue to 0>TriggerGroup= 2, $2000, 232, $1FF ; set CurrentValue to 1>TriggerGroup= 3, $2000, 271, $2 ; copy GBA3 to CurrentValue>TriggerGroup= 4, $2000, 272, $2 ; copy CurrentValue to GBA3

CUST_CINV_ITEM_ANIMATION:8 ;Used with Customize= command.>Syntax:Customize=CUST_CINV_ITEM_ANIMATION, ItemId (CINV_ITEM_...), Type (CINV_ANIM_...), AnimIndex, FrameStart, FrameEnd, WaitForMotions (CINV_TRUE/FALSE) {Type, Index, Start, End and Boolean array}>>This is used to customize item animations for the classic inventory.>>You can use one such command per item per level. Multiple types can be customized per command.>>Note: Only animations with a frame rate of 1 are currently supported. Any higher rate will result in animations playing faster than desired.>>ItemId (CINV_ITEM_...) field>---------------------------->The item to customize.>>See the CINV_ITEM_ constants in the Reference panel of NG_Center.>>Type (CINV_ANIM_...) field>-------------------------->The type of animation to customize.>>See the CINV_ANIM_ constants in the Reference panel of NG_Center.>>AnimIndex field>--------------->The index of the animation to use.>>Use WadMerger or similar tool to get index.>>FrameStart field>---------------->The index of the first frame.>>Use WadMerger or similar tool to get index.>>FrameEnd field>-------------->The index of the final frame.>>Use WadMerger or similar tool to get index.>>WaitForMotions (CINV_TRUE/FALSE) field>-------------------------------------->If true, the animation will wait for any motions currently in progress to end before playing.>>Motions are things like item positioning, orienting and any other non-animation related movements.>>Type IGNORE to use default value (false).>>Examples:>Customize= CUST_CINV_ITEM_ANIMATION, CINV_ITEM_SMALLMEDI,>		   CINV_ANIM_ACTIVATE, 0, 0, 25, CINV_TRUE,>		   CINV_ANIM_CANCEL, 0, 25, 0, CINV_TRUE>>Customize= CUST_CINV_ITEM_ANIMATION, CINV_ITEM_NEW1,>		   CINV_ANIM_ACTIVATE, 0, 0, 14, CINV_TRUE,>		   CINV_ANIM_CANCEL, 0, 24, 29, CINV_TRUE,>		   CINV_ANIM_PASSPORT_PAGE2, 0, 14, 19, CINV_FALSE,>		   CINV_ANIM_PASSPORT_PAGE3, 0, 19, 24, CINV_FALSE

CUST_CINV_ITEM_ACTION:9 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_ITEM_ACTION, ItemId (CINV_ITEM_...), Type (CINV_ACTION_...), NameStringIndex, SortIndex, Replace (CINV_TRUE/FALSE), EnabledConditionGroupId, ActionTriggerGroupId, {Type, StringIndex, SortIndex, Boolean, ConditionGroup and TriggerGroup array}>>This is used to customize item actions for the classic inventory.>>You can use one such command per item per level. Multiple types can be customized per command.>>ItemId (CINV_ITEM_...) field>---------------------------->The item to customize.>>See the CINV_ITEM_ constants in the Reference panel of NG_Center.>>Type (CINV_ACTION_...) field>---------------------------->The type of action to customize.>>See the CINV_ACTION_ constants in the Reference panel of NG_Center.>>NameStringIndex field>--------------------->The string index to use for the name.>>See the Strings panel of NG_Center. ExtraNG strings need 359 added to their index.>>Type IGNORE to use default value if one exists.>>SortIndex field>--------------->The order of the action in the action menu starting from 0.>>Type IGNORE to use default value.>>Replace (CINV_TRUE/FALSE) field>------------------------------->If true, the action will replace the default action if one exists.>>Type IGNORE to use default value (false).>>EnabledConditionGroupId field>----------------------------->The ID of the TriggerGroup to call to determine whether this action should be shown.>>Must evaluate to either true or false.>>Type IGNORE to use default conditions.>>ActionTriggerGroupId field>-------------------------->The ID of the TriggerGroup to call when this action is performed.>>Type IGNORE to perform the default action if one exists.>>Examples:>Customize= CUST_CINV_ITEM_ACTION, CINV_ITEM_SMALLMEDI,>		   CINV_ACTION_USE, 359+25, IGNORE, CINV_FALSE, IGNORE, 1,>		   CINV_ACTION_CUSTOM, 359+34, IGNORE, CINV_TRUE, IGNORE, 2>>Customize= CUST_CINV_ITEM_ACTION, CINV_ITEM_PUZZLE3, CINV_ACTION_USE, 320, IGNORE, IGNORE, IGNORE, IGNORE>>TriggerGroup= 1, $2000, 355, $1401 ; flash orange>TriggerGroup= 2, $2000, 355, $1404 ; flash green

CUST_CINV_ITEM_SFX:10 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_ITEM_SFX, ItemId (CINV_ITEM_...), Type (CINV_SFX_...), SoundId, {Type and Sound array}>>This is used to customize item sounds for the classic inventory.>>You can use one such command per item per level. Multiple types can be customized per command.>>ItemId (CINV_ITEM_...) field>---------------------------->The item to customize.>>See the CINV_ITEM_ constants in the Reference panel of NG_Center.>>Type (CINV_SFX_...) field>------------------------->The type of sound to customize.>>See the CINV_SFX_ constants in the Reference panel of NG_Center.>>SoundId field>------------->The ID of the sound to use.>>See the SOUND SFX list in the Reference panel of NG_Center.>>Type IGNORE to disable the sound.>>Example:>Customize= CUST_CINV_ITEM_SFX, CINV_ITEM_NEW2,>		   CINV_SFX_ITEM_ACTIVATE, 349,>		   CINV_SFX_ITEM_CANCEL, 75,>		   CINV_SFX_ITEM_ACTIVE, 60

CUST_CINV_DURATION:11 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_DURATION, Type (CINV_DUR_...), DurationFrames>>This is used to customize durations for the classic inventory.>>You can use one such command per type per level.>>Type (CINV_DUR_...) field>------------------------->The type of duration to customize.>>See the CINV_DUR_ constants in the Reference panel of NG_Center.>>DurationFrames field>-------------------->The duration in frames (30 = 1 second).>>Examples:>Customize= CUST_CINV_DURATION, CINV_DUR_ITEM_ACTIVATE, 15>Customize= CUST_CINV_DURATION, CINV_DUR_INVENTORY_OPEN, 30

CUST_CINV_DISPLAY:12 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_DISPLAY, RingRadius, ItemBaseSize>>This is used to customize the display for the classic inventory.>>You can use one such command per level.>>RingRadius field>---------------->The radius of the rings in game units (1024 = 1 sector).>>Type IGNORE to use default value.>>ItemBaseSize field>------------------>The base size for item models. Unit is unknown, best to experiment.>>Be careful with too large a value as it can cause rendering issues for item models with shine applied.>>Type IGNORE to use default value.>>Examples:>Customize= CUST_CINV_DISPLAY, 512, IGNORE>Customize= CUST_CINV_DISPLAY, IGNORE, 16834>Customize= CUST_CINV_DISPLAY, 1024, 20834

CUST_CINV_SFX:13 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_SFX, Type (CINV_SFX_...), SoundId>>This is used to customize the sound for the classic inventory.>>You can use one such command per type per level.>>Type (CINV_SFX_...) field>------------------------->The type of sound to customize.>>See the CINV_SFX_ constants in the Reference panel of NG_Center.>>SoundId field>------------->The ID of the sound to use.>>See the SOUND SFX list in the Reference panel of NG_Center.>>Type IGNORE to disable the sound.>>Examples:>Customize= CUST_CINV_SFX, CINV_SFX_INVENTORY_OPEN, 30>Customize= CUST_CINV_SFX, CINV_SFX_INVENTORY_CLOSE, 39>Customize= CUST_CINV_SFX, CINV_SFX_RING_ROTATE, IGNORE

CUST_CINV_TEXT:14 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_TEXT, Type (CINV_TXT_...), ScreenX, ScreenY, Size (FT_SIZE_...), Colour (CL_...), Alignment (CINV_TXT_ALIGN_...), LineHeight, Enabled (CINV_TRUE/FALSE)>>This is used to customize text for the classic inventory.>>You can use one such command per type per level.>>Type (CINV_TXT_...) field>------------------------->The type of text to customize.>>See the CINV_TXT_ constants in the Reference panel of NG_Center.>>ScreenX field>------------->The X coordinate of the text in screen units (0-1000).>>Type IGNORE to use default value.>>ScreenY field>------------->The Y coordinate of the text in screen units (0-1000).>>Type IGNORE to use default value.>>Size (FT_SIZE_...) field>------------------------>The font size of the text.>>See the FT_SIZE_ constants in the Reference panel of NG_Center.>>Type IGNORE to use default value.>>Colour (CL_...) field>--------------------->The colour of the text.>>See the CL_ constants in the Reference panel of NG_Center.>>Type IGNORE to use default value.>>Alignment (CINV_TXT_ALIGN_...) field>------------------------------------>The horizontal alignment of the text.>>See the CINV_TXT_ALIGN_ constants in the Reference panel of NG_Center.>>Type IGNORE to use default value.>>LineHeight field>---------------->The line height of the text in screen units (0-1000).>>This is used to prevent text using the same X,Y coordinates from overlapping.>When overlapping happens, the text is shifted down the Y-axis by the previous text's line height until no overlapping occurs.>>This is needed for lists like the action menu where the amount of lines are dynamic.>>Type IGNORE to use default value.>>Enabled (CINV_TRUE/FALSE) field>------------------------------->Set to false to disable this text.>>Type IGNORE to use default value (true).>>Examples:>Customize= CUST_CINV_TEXT, CINV_TXT_RING_NAME, IGNORE, 200, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE>Customize= CUST_CINV_TEXT, CINV_TXT_NAV_UP_LEFT, 200, 200, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE>Customize= CUST_CINV_TEXT, CINV_TXT_NAV_UP_RIGHT, 800, 200, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE>Customize= CUST_CINV_TEXT, CINV_TXT_ACTION_MENU_HIGHLIGHT, IGNORE, IGNORE, IGNORE, CL_RED, IGNORE, IGNORE, IGNORE>Customize= CUST_CINV_TEXT, CINV_TXT_NAV_LEFT, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, CINV_FALSE>Customize= CUST_CINV_TEXT, CINV_TXT_NAV_RIGHT, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, CINV_FALSE

CUST_CINV_CAMERA:15 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_CAMERA, FieldOfView, ClosedPosX, ClosedPosY, ClosedPosZ, ClosedTgtX, ClosedTgtY, ClosedTgtZ, OpenPosX, OpenPosY, OpenPosZ, OpenTgtX, OpenTgtY, OpenTgtZ, RingChangePitch>>This is used to customize the camera view for the classic inventory.>>You can use one such command per level.>>By default the camera is looking South (-Z) with East (+X) on the left and West (-X) on the right.>>Best to use along with debug mode when changing settings, Customize=CUST_CINV_DEBUG.>>FieldOfView field>----------------->The angle of view when the inventory is open, in degrees (0-360).>>Uncertain whether this is horizontal, vertical or diagonal FOV. Assuming horizontal.>>Type IGNORE to use default value.>>ClosedPosX field>---------------->The position of the camera along the X-axis when the inventory is closed, in game units (1024 = 1 sector).>>Type IGNORE to use default value.>>ClosedPosY field>---------------->The position of the camera along the Y-axis when the inventory is closed, in game units (1024 = 1 sector).>>Type IGNORE to use default value.>>ClosedPosZ field>---------------->The position of the camera along the Z-axis when the inventory is closed, in game units (1024 = 1 sector).>>This is relative to the current radius of the active ring.>>Type IGNORE to use default value.>>ClosedTgtX field>---------------->The target point to look at along the X-axis when the inventory is closed, in game units (1024 = 1 sector).>>Type IGNORE to use default value.>>ClosedTgtY field>---------------->The target point to look at along the Y-axis when the inventory is closed, in game units (1024 = 1 sector).>>Type IGNORE to use default value.>>ClosedTgtZ field>---------------->The target point to look at along the Z-axis when the inventory is closed, in game units (1024 = 1 sector).>>Currently this is always equal to the current radius of the active ring.>>Type IGNORE for now.>>OpenPosX field>-------------->The position of the camera along the X-axis when the inventory is open, in game units (1024 = 1 sector).>>Type IGNORE to use default value.>>OpenPosY field>-------------->The position of the camera along the Y-axis when the inventory is open, in game units (1024 = 1 sector).>>Type IGNORE to use default value.>>OpenPosZ field>-------------->The position of the camera along the Z-axis when the inventory is open, in game units (1024 = 1 sector).>>This is relative to the current radius of the active ring.>>Type IGNORE to use default value.>>OpenTgtX field>-------------->The target point to look at along the X-axis when the inventory is open, in game units (1024 = 1 sector).>>Type IGNORE to use default value.>>OpenTgtY field>-------------->The target point to look at along the Y-axis when the inventory is open, in game units (1024 = 1 sector).>>Type IGNORE to use default value.>>OpenTgtZ field>-------------->The target point to look at along the Z-axis when the inventory is open, in game units (1024 = 1 sector).>>Currently this is always equal to the current radius of the active ring.>>Type IGNORE for now.>>RingChangePitch field>--------------------->The angle to pitch up/down when changing rings, in degrees (0-360).>>This gives the illusion that rings are stacked.>>Type IGNORE to use default value.>>Examples:>Customize= CUST_CINV_CAMERA, 100, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, -140, 370, IGNORE, -70, IGNORE, 60>Customize= CUST_CINV_CAMERA, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE, 800, IGNORE, -90, IGNORE, 0

CUST_CINV_LIGHTING:16 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_LIGHTING, RoomIndex, CordX, CordY, CordZ>>This is used to customize the lighting scheme for the classic inventory.>>You can use one such command per level.>>Inventory lighting seems to be based on Lara's current position and orientation.>To customize the position, you can create a lighting room in the level editor and use the coordinates of any spot inside this room.>To see the coordinates in-game you can use the Diagnostic=ENABLED and DiagnosticType=DGX_LARA commands.>>By default the room with the brightest ambience in the map should be used, but this is not guaranteed.>Best to always set a custom location to ensure consistent lighting.>>Note: There will be a water-effect while the in-game camera is underwater.>>RoomIndex field>--------------->The index of the room to use.>>This is the Room= field when diagnostics are enabled.>>Type IGNORE to use the current room while in-game.>>CordX field>----------->The X coordinate to use in game units (1024 = 1 sector).>>This is the Cx= field when diagnostics are enabled.>>Please make sure this falls inside the room specified in the RoomIndex field.>>The max value that can be used is 32767.>>Type IGNORE to use the current coordinate while in-game.>>CordY field>----------->The Y coordinate to use in game units (1024 = 1 sector).>>This is the Cy= field when diagnostics are enabled.>>Please make sure this falls inside the room specified in the RoomIndex field.>>The max value that can be used is 32767.>>Type IGNORE to use the current coordinate while in-game.>>CordZ field>----------->The Z coordinate to use in game units (1024 = 1 sector).>>This is the Cz= field when diagnostics are enabled.>>Please make sure this falls inside the room specified in the RoomIndex field.>>The max value that can be used is 32767.>>Type IGNORE to use the current coordinate while in-game.>>Examples:>Customize= CUST_CINV_LIGHTING, 65, 2560, 0, 2560>Customize= CUST_CINV_LIGHTING, 66, 7680, 0, 2560>Customize= CUST_CINV_LIGHTING, 67, 12800, 0, 2560>Customize= CUST_CINV_LIGHTING, IGNORE, IGNORE, IGNORE, IGNORE

CUST_CINV_CHEATS:17 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_CHEATS, ItemId (CINV_ITEM_...), Key1ScanCode, Key2ScanCode, Key3ScanCode, Key4ScanCode, Key5ScanCode, HintType (CINV_CHEAT_HINT_...), EnabledConditionGroupId, ActionTriggerGroupId, {ItemId, ScanCodes, HintType, ConditionGroupId and TriggerGroupId array}>>This is used to customize cheats for the classic inventory.>>You can use one such command per level. Multiple cheats can be customized per command.>>The default cheats are:>GUN on small medipack: gives all weapons, unlimited ammo, unlimited medis and unlimited flares.>BITS on big medipack: gives all available items for the current level (crowbar, puzzles, keys, pickups, quest items, beetle and waterskins).>HELP on load memorycard: skips to the next level.>>ItemId (CINV_ITEM_...) field>---------------------------->The item that must be selected (i.e. not activated) in the inventory to perform this cheat.>>See the CINV_ITEM_ constants in the Reference panel of NG_Center.>>Key1ScanCode field>------------------>The key that must be held to perform this cheat.>>See the KEYBOARD SCANCODES list in the Reference panel of NG_Center.>>Type IGNORE if not needed.>>Key2ScanCode field>------------------>The key that must be held to perform this cheat.>>See the KEYBOARD SCANCODES list in the Reference panel of NG_Center.>>Type IGNORE if not needed.>>Key3ScanCode field>------------------>The key that must be held to perform this cheat.>>See the KEYBOARD SCANCODES list in the Reference panel of NG_Center.>>Type IGNORE if not needed.>>Key4ScanCode field>------------------>The key that must be held to perform this cheat.>>See the KEYBOARD SCANCODES list in the Reference panel of NG_Center.>>Type IGNORE if not needed.>>Key5ScanCode field>------------------>The key that must be held to perform this cheat.>>See the KEYBOARD SCANCODES list in the Reference panel of NG_Center.>>Type IGNORE if not needed.>>HintType (CINV_CHEAT_HINT_...) field>------------------------------------>The type of hint to use to indicate the cheat is currently enabled.>>See the CINV_CHEAT_HINT_ constants in the Reference panel of NG_Center.>>Type IGNORE to use default value (CINV_CHEAT_HINT_COMPASS).>>EnabledConditionGroupId field>----------------------------->The ID of the TriggerGroup that will be called to determine whether this cheat is currently enabled.>>Must evaluate to either true or false.>>Type IGNORE to use default conditions (Lara is facing North).>>ActionTriggerGroupId field>-------------------------->The ID of the TriggerGroup that will be called when this cheat is performed.>>Type IGNORE to use default action, if any.>>Examples:>Customize= CUST_CINV_CHEATS,>		   CINV_ITEM_SMALLMEDI, 2, 6, 10, IGNORE, IGNORE, IGNORE, IGNORE, 1,>		   CINV_ITEM_PISTOLS, 2, 6, 10, IGNORE, IGNORE, IGNORE, IGNORE, 2>>TriggerGroup= 1, $2000, 355, $1401 ; flash orange>TriggerGroup= 2, $2000, 355, $1404 ; flash green

CUST_CINV_AMMO:18 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_AMMO, WeaponItemId (CINV_ITEM_...), AmmoItemId (CINV_ITEM_...), LoadedConditionGroupId, LoadTriggerGroupId, UnloadTriggerGroupId, {AmmoItem, ConditionGroup, TriggerGroup and TriggerGroup array}>>This is used to assign ammo types to items for the classic inventory.>>You can use one such command per item per level. Multiple ammos can be assigned per command.>>Note: When assigning new ammos types, you will need to handle the actual weapon and ammo usage outside the inventory. For example, don't expect the Pistols to shoot Uzi ammo simply by using this command alone. Any further functionality will need to be done by additional scripting and/or plugins. The goal of this command is just to manage ammo types in the inventory.>>WeaponItemId (CINV_ITEM_...) field>---------------------------------->The weapon item to assign ammos for.>>See the CINV_ITEM_ constants in the Reference panel of NG_Center.>>AmmoItemId (CINV_ITEM_...) field>-------------------------------->The ammo item to assign to this weapon.>>See the CINV_ITEM_ constants in the Reference panel of NG_Center.>>LoadedConditionGroupId field>---------------------------->The ID of the TriggerGroup to call to determine whether this ammo is currently loaded.>>Must evaluate to either true or false. The condition can be anything, but normally it's a flag set somewhere that indicates whether this ammo is currently loaded.>>LoadTriggerGroupId field>------------------------>The ID of the TriggerGroup to call to load this ammo.>>You can do anything in this TriggerGroup, but normally it's to set a flag to be evaluated later by the LoadedConditionGroup.>>UnloadTriggerGroupId field>-------------------------->The ID of the TriggerGroup to call to unload this ammo.>>You can do anything in this TriggerGroup, but normally it's to clear the flag set in the LoadTriggerGroup.>>Examples:>Customize= CUST_CINV_AMMO, CINV_ITEM_PISTOLS,>		   CINV_ITEM_PISTOLS_AMMO, 1, 2, 3,>		   CINV_ITEM_UZI_AMMO, 4, 5, 6>>TriggerGroup= 1, $8000, 0, $2C ; GBA1 has bit 0 set>TriggerGroup= 2, $2000, 234, $0 ; set bit 0 in GBA1>TriggerGroup= 3, $2000, 235, $0 ; clear bit 0 in GBA1>>TriggerGroup= 4, $8000, 0, $12C ; GBA1 has bit 1 set>TriggerGroup= 5, $2000, 234, $100 ; set bit 1 in GBA1>TriggerGroup= 6, $2000, 235, $100 ; clear bit 1 in GBA1

CUST_CINV_COMBO:19 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_COMBO, FirstItemId (CINV_ITEM_...), SecondItemId (CINV_ITEM_...), FinalItemId (CINV_ITEM_...), ExtraItemId (CINV_ITEM_...), ViceVersa (CINV_TRUE/FALSE), Separable (CINV_TRUE/FALSE), CombineTriggerGroupId, SeparateTriggerGroupId, {ItemId, ItemId, ItemId, ItemId, Boolean, Boolean, TriggerGroup and TriggerGroup array}>>This is used to customize combos for the classic inventory.>>You can use one such command per level. Multiple combos can be customized per command.>>Note: This replaces TRNG's CombineItems command. Any existing CombineItems commands will be ignored.>>FirstItemId (CINV_ITEM_...) field>--------------------------------->The first item required for this combo.>>See the CINV_ITEM_ constants in the Reference panel of NG_Center.>>SecondItemId (CINV_ITEM_...) field>---------------------------------->The second item required for this combo.>>See the CINV_ITEM_ constants in the Reference panel of NG_Center.>>FinalItemId (CINV_ITEM_...) field>--------------------------------->The item resulting from combining the first and second items.>>See the CINV_ITEM_ constants in the Reference panel of NG_Center.>>ExtraItemId (CINV_ITEM_...) field>--------------------------------->The optional extra item resulting from combining the first and second items.>This is useful for items like waterskins where you get two different looking items after combining.>>See the CINV_ITEM_ constants in the Reference panel of NG_Center.>>Type IGNORE if not needed.>>ViceVersa (CINV_TRUE/FALSE) field>--------------------------------->Set to false if the combo only works when combining the first item with the second item and not the other way around.>This is useful for items like waterskins where you get a different result based on the combine order.>>Type IGNORE to use default value (true).>>Separable (CINV_TRUE/FALSE) field>--------------------------------->Set to true to allow the final item to be separated to get back the first and second items.>>Type IGNORE to use default value (false except for revolver/crossbow and lasersight combos).>>CombineTriggerGroupId field>--------------------------->The ID of the TriggerGroup to call to perform the combination logic.>In the TriggerGroup you can perform any combination logic you desire, like adding and removing items, or anything else.>>Type IGNORE to use default logic.>>SeparateTriggerGroupId field>---------------------------->The ID of the TriggerGroup to call to perform the separate logic.>In the TriggerGroup you can perform any separation logic you desire, like adding and removing items, or anything else.>>Type IGNORE to use default logic.>>Examples:>Customize= CUST_CINV_COMBO,>		   CINV_ITEM_PUZZLE1, CINV_ITEM_PUZZLE12, CINV_ITEM_LASERSIGHT, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE,>		   CINV_ITEM_PISTOLS, CINV_ITEM_UZI_AMMO, CINV_ITEM_SHOTGUN, CINV_ITEM_UZI, CINV_FALSE, CINV_FALSE, IGNORE, IGNORE

CUST_CINV_EXAMINE:20 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_EXAMINE, ItemId (CINV_ITEM_...), Text1StringIndex, Text2StringIndex, Text3StringIndex>>This is used to make any item examinable for the classic inventory.>>You can use one such command per item per level.>>ItemId (CINV_ITEM_...) field>--------------------------->The item to make examinable.>>See the CINV_ITEM_ constants in the Reference panel of NG_Center.>>Text1StringIndex field>---------------------->The string index to use for the text showing at the top while examining the item.>>See the Strings panel of NG_Center. ExtraNG strings need 359 added to their index.>>Type IGNORE if not needed.>>Text2StringIndex field>---------------------->The string index to use for the text showing in the middle while examining the item.>>See the Strings panel of NG_Center. ExtraNG strings need 359 added to their index.>>Type IGNORE if not needed.>>Text3StringIndex field>---------------------->The string index to use for the text showing at the bottom while examining the item.>>See the Strings panel of NG_Center. ExtraNG strings need 359 added to their index.>>Type IGNORE if not needed.>>Examples:>Customize= CUST_CINV_EXAMINE, CINV_ITEM_PISTOLS, IGNORE, 354, IGNORE>Customize= CUST_CINV_EXAMINE, CINV_ITEM_REVOLVER, IGNORE, IGNORE, IGNORE>Customize= CUST_CINV_EXAMINE, CINV_ITEM_PICKUP1, 359+43, IGNORE, IGNORE

CUST_CINV_HEALTH:21 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_HEALTH, ItemId (CINV_ITEM...), HealthPoints, PoisonPoints, HealSoundId, HurtSoundId, CurePoison (CINV_TRUE/FALSE), IncreaseUsageStats (CINV_TRUE/FALSE)>>This is used to make any item a health item for the classic inventory.>>You can use one such command per item per level.>>Note: The poison bar might temporarily disappear for a while after using an item with a small poison value. This usually happens when Lara's current poison value is still low and her health bar is not flashing.>>ItemId (CINV_ITEM...) field>--------------------------->The item to make a health item.>>See the CINV_ITEM_ constants in the Reference panel of NG_Center.>>HealthPoints field>------------------>The amount of points to add to Lara's health (-1000 to 1000).>>Type IGNORE to add no points.>>PoisonPoints field>------------------>The amount of points to add to Lara's poison (0-4096).>>After adding, Lara's current poison value will further increase by 1 each game frame.>>Type IGNORE to add no points.>>HealSoundId field>----------------->The sound ID to use if Lara's health has increased after using this item.>>See the SOUND SFX list in the Reference panel of NG_Center.>>Type IGNORE to use default value.>>HurtSoundId field>----------------->The sound ID to use if Lara's health has decreased after using this item.>>See the SOUND SFX list in the Reference panel of NG_Center.>>Type IGNORE to use default value.>>CurePoison (CINV_TRUE/FALSE) field>---------------------------------->Set to true if this item should cure any poison currently active.>>Type IGNORE to use default value (true).>>IncreaseUsageStats (CINV_TRUE/FALSE) field>------------------------------------------>Set to true if the stats for total medi items used should increase after using this item.>>Type IGNORE to use default value (true).>>Examples:>Customize= CUST_CINV_HEALTH, CINV_ITEM_SMALLMEDI, -350, IGNORE, IGNORE, IGNORE, CINV_FALSE, IGNORE>Customize= CUST_CINV_HEALTH, CINV_ITEM_PUZZLE3, -200, 100, IGNORE, IGNORE, CINV_FALSE, IGNORE>Customize= CUST_CINV_HEALTH, CINV_ITEM_PUZZLE4, 200, IGNORE, IGNORE, IGNORE, CINV_TRUE, IGNORE

CUST_CINV_COMPASS:22 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_COMPASS, ItemId (CINV_ITEM_...), NeedleMeshIndex, NeedleMeshAxis (CINV_AXIS_...), NeedleAttraction, NeedleFriction, NeedleOffset, GetTargetTriggerGroupId>>This is used to make any item a compass for the classic inventory.>>You can use one such command per item per level.>>ItemId (CINV_ITEM_...) field>---------------------------->The item to make a compass.>>See the CINV_ITEM_ constants in the Reference panel of NG_Center.>>NeedleMeshIndex field>--------------------->The mesh of the item model to use as the needle.>>Type IGNORE to use default value (1).>>NeedleMeshAxis (CINV_AXIS_...) field>------------------------------------>The axis around which the needle mesh rotates when the item model is at zero orientation.>>See the CINV_AXIS_ constants in the Reference panel of NG_Center.>>Type IGNORE to use default value (CINV_AXIS_Y).>>NeedleAttraction field>---------------------->The strength of the magnetic field pulling the needle, in the range 0-32767.>>Type IGNORE to use default value (100).>>NeedleFriction field>-------------------->The amount of friction experienced by the needle as it swings causing it to settle, in percent (0-100).>>If the friction is 0, the needle will keep swinging and never settle. A value of 100 will disable the swinging altogether.>>Type IGNORE to use default value (3).>>NeedleOffset field>------------------>The angle to offset the needle by from true North, in degrees (0-360).>>By default the red part of the TR4 compass needle indicating North is rotated 180 degrees, thus a offset of 180 is used by default.>>Type IGNORE to use default value.>>GetTargetTriggerGroupId field>----------------------------->The ID of the TriggerGroup to call to get a target to point at instead of North.>>The target needs to be an item (movable or static) placed somewhere on the map.>In the TriggerGroup you need to copy the item's NGLE index to the CurrentValue variable.>If the item can't be found, North will be used.>>Type IGNORE to not use a target.>>Examples:>Customize= CUST_CINV_COMPASS, CINV_ITEM_COMPASS, 1, CINV_AXIS_Y, 80, IGNORE, IGNORE, IGNORE>Customize= CUST_CINV_COMPASS, CINV_ITEM_COMPASS, 1, CINV_AXIS_Y, IGNORE, 100, IGNORE, IGNORE>Customize= CUST_CINV_COMPASS, CINV_ITEM_NEW1, 1, CINV_AXIS_Z, 5000, 5, IGNORE, 1>>TriggerGroup= 1, $2000, 232, $AFF

CUST_CINV_STOPWATCH:23 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_STOPWATCH, ItemId (CINV_ITEM_...), HourHandMeshIndex, HourHandMeshAxis (CINV_AXIS_...), MinuteHandMeshIndex, MinuteHandMeshAxis (CINV_AXIS_...), SecondHandMeshIndex, SecondHandMeshAxis (CINV_AXIS_...), FrequencyFrames>>This is used to make any item a stopwatch for the classic inventory.>>You can use one such command per item per level.>>ItemId (CINV_ITEM_...) field>---------------------------->The item to make a stopwatch.>>See the CINV_ITEM_ constants in the Reference panel of NG_Center.>>HourHandMeshIndex field>----------------------->The mesh of the item model to use as the hour hand.>>HourHandMeshAxis (CINV_AXIS_...) field>-------------------------------------->The axis around which the hour hand mesh rotates when the item model is at zero orientation.>>See the CINV_AXIS_ constants in the Reference panel of NG_Center.>>Type IGNORE to use default value (CINV_AXIS_Y).>>MinuteHandMeshIndex field>------------------------->The mesh of the item model to use as the minute hand.>>MinuteHandMeshAxis (CINV_AXIS_...) field>---------------------------------------->The axis around which the minute hand mesh rotates when the item model is at zero orientation.>>See the CINV_AXIS_ constants in the Reference panel of NG_Center.>>Type IGNORE to use default value (CINV_AXIS_Y).>>SecondHandMeshIndex field>------------------------->The mesh of the item model to use as the second hand.>>SecondHandMeshAxis (CINV_AXIS_...) field>---------------------------------------->The axis around which the second hand mesh rotates when the item model is at zero orientation.>>See the CINV_AXIS_ constants in the Reference panel of NG_Center.>>Type IGNORE to use default value (CINV_AXIS_Y).>>FrequencyFrames field>--------------------->How frequently the hands should be updated to reflect the current game time, in frames (30 = 1 second).>>Type IGNORE to use default value (30).>>Examples:>Customize= CUST_CINV_STOPWATCH, CINV_ITEM_NEW1, 4, CINV_AXIS_Z, 5, CINV_AXIS_Z, 6, CINV_AXIS_Z, IGNORE>Customize= CUST_CINV_STOPWATCH, CINV_ITEM_NEW2, 4, CINV_AXIS_Z, 5, CINV_AXIS_Z, 6, CINV_AXIS_Z, 5

CUST_CINV_PASSPORT:24 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_PASSPORT, ItemId (CINV_ITEM_...), PageSoundId>>This is used to make any item a passport for the classic inventory.>>You can use one such command per item per level.>>Note: You need to specify the page actions and animations separately using a CUST_CINV_ITEM_ACTION and CUST_CINV_ITEM_ANIMATION command respectively.>Each action corresponds to a page of which currently there can be a maximum of 3.>>ItemId (CINV_ITEM_...) field>---------------------------->The item to make a passport.>>See the CINV_ITEM_ constants in the Reference panel of NG_Center.>>PageSoundId field>----------------->The ID of the sound to use when a page is turned.>>See the SOUND SFX list in the Reference panel of NG_Center.>>Example:>Customize= CUST_CINV_ITEM_ACTION, CINV_ITEM_NEW1,>		   CINV_ACTION_LOAD_GAME, 46, IGNORE, IGNORE, IGNORE, IGNORE,>		   CINV_ACTION_SAVE_GAME, 47, IGNORE, IGNORE, IGNORE, IGNORE,>		   CINV_ACTION_EXIT_TO_TITLE, 180, IGNORE, IGNORE, IGNORE, IGNORE>>Customize= CUST_CINV_ITEM_ANIMATION, CINV_ITEM_NEW1,>		   CINV_ANIM_ACTIVATE, 0, 0, 14, CINV_TRUE,>		   CINV_ANIM_CANCEL, 0, 24, 29, CINV_TRUE,>		   CINV_ANIM_PASSPORT_PAGE2, 0, 14, 19, CINV_FALSE,>		   CINV_ANIM_PASSPORT_PAGE3, 0, 19, 24, CINV_FALSE>>Customize= CUST_CINV_PASSPORT, CINV_ITEM_NEW1, 189

CUST_CINV_MAP:25 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_MAP, ItemId (CINV_ITEM_...), Cancelable (CINV_TRUE/FALSE), MarkerMeshIndex, MapOrientX, MapOrientY, MapOrientZ, {MeshIndex, Orient array}>>This is used to make any item a map for the classic inventory.>>You can use one such command per item per level. Multiple markers can be customized per command.>>Note: You need to specify the marker actions separately using a CUST_CINV_ITEM_ACTION command.>There needs to be one action corresponding to every marker.>Markers with disabled or no actions are hidden.>>ItemId (CINV_ITEM_...) field>---------------------------->The item to make a map.>>See the CINV_ITEM_ constants in the Reference panel of NG_Center.>>Cancelable (CINV_TRUE/FALSE) field>---------------------------------->Set to false to prevent players from cancelling the map, forcing them to choose a marker.>>Type IGNORE to use default value (true).>>MarkerMeshIndex field>--------------------->The mesh of the item model to use for the marker.>>MapOrientX field>---------------->The relative orientation of the map around the X-axis when this marker is selected, in degrees (between -360 and 360).>>MapOrientY field>---------------->The relative orientation of the map around the Y-axis when this marker is selected, in degrees (between -360 and 360).>>MapOrientZ field>---------------->The relative orientation of the map around the Z-axis when this marker is selected, in degrees (between -360 and 360).>>Example:>Customize= CUST_CINV_ITEM_ACTION, CINV_ITEM_NEW6,>		   CINV_ACTION_CUSTOM, 359+6, IGNORE, IGNORE, IGNORE, 1,>		   CINV_ACTION_CUSTOM, 359+2, IGNORE, IGNORE, IGNORE, 2,>		   CINV_ACTION_CUSTOM, 359+7, IGNORE, IGNORE, IGNORE, 3>>; ----- Teleport Lara>TriggerGroup= 1, $2000,79,$0001>TriggerGroup= 2, $2000,79,$0002>TriggerGroup= 3, $2000,79,$0003>>Customize= CUST_CINV_MAP, CINV_ITEM_NEW6, IGNORE,>		   1, 80, 60, 0,>		   2, 60, 140, 0,>		   3, 10, 345, 0

CUST_CINV_DEBUG:26 ;Used with Customize= command.>Syntax: Customize=CUST_CINV_DEBUG, Enabled (CINV_TRUE/FALSE)>>This is used to enable debug mode for the classic inventory.>>You can use one such command per level.>>Note: Only the Left Ctrl button is currently working and only the Numpad keys for camera and ring settings.>>Enabled (CINV_TRUE/FALSE) field>------------------------------->Set to true to enable debug mode.>>Press the ROLL command to activate while the inventory is open.>>Type IGNORE to use default value (false).>>Example:>Customize= CUST_CINV_DEBUG, CINV_TRUE

CINV_RING_OPTIONS:1
CINV_RING_DOCUMENTS:2
CINV_RING_INVENTORY:3
CINV_RING_WEAPONS:4
CINV_RING_ITEMS:5
CINV_RING_MISC1:6
CINV_RING_MISC2:7
CINV_RING_MISC3:8
CINV_RING_MISC4:9
CINV_RING_MISC5:10

CINV_ITEM_UZI:-120
CINV_ITEM_PISTOLS:-119
CINV_ITEM_SHOTGUN:-118
CINV_ITEM_REVOLVER:-117
CINV_ITEM_REVOLVER_LASERSIGHT_COMBO:-116
CINV_ITEM_CROSSBOW:-115
CINV_ITEM_CROSSBOW_LASERSIGHT_COMBO:-114
CINV_ITEM_GRENADE_GUN:-113
CINV_ITEM_SHOTGUN_AMMO1:-112
CINV_ITEM_SHOTGUN_AMMO2:-111
CINV_ITEM_GRENADE_GUN_AMMO1:-110
CINV_ITEM_GRENADE_GUN_AMMO2:-109
CINV_ITEM_GRENADE_GUN_AMMO3:-108
CINV_ITEM_CROSSBOW_AMMO1:-107
CINV_ITEM_CROSSBOW_AMMO2:-106
CINV_ITEM_CROSSBOW_AMMO3:-105
CINV_ITEM_REVOLVER_AMMO:-104
CINV_ITEM_UZI_AMMO:-103
CINV_ITEM_PISTOLS_AMMO:-102
CINV_ITEM_LASERSIGHT:-101
CINV_ITEM_BIGMEDI:-100
CINV_ITEM_SMALLMEDI:-99
CINV_ITEM_BINOCULARS:-98
CINV_ITEM_FLARE_INV:-97
CINV_ITEM_COMPASS:-96
CINV_ITEM_MEMCARD_LOAD_INV:-95
CINV_ITEM_MEMCARD_SAVE_INV:-94
CINV_ITEM_WATERSKIN1_EMPTY:-93
CINV_ITEM_WATERSKIN1_1:-92
CINV_ITEM_WATERSKIN1_2:-91
CINV_ITEM_WATERSKIN1_3:-90
CINV_ITEM_WATERSKIN2_EMPTY:-89
CINV_ITEM_WATERSKIN2_1:-88
CINV_ITEM_WATERSKIN2_2:-87
CINV_ITEM_WATERSKIN2_3:-86
CINV_ITEM_WATERSKIN2_4:-85
CINV_ITEM_WATERSKIN2_5:-84
CINV_ITEM_PUZZLE1:-83
CINV_ITEM_PUZZLE2:-82
CINV_ITEM_PUZZLE3:-81
CINV_ITEM_PUZZLE4:-80
CINV_ITEM_PUZZLE5:-79
CINV_ITEM_PUZZLE6:-78
CINV_ITEM_PUZZLE7:-77
CINV_ITEM_PUZZLE8:-76
CINV_ITEM_PUZZLE9:-75
CINV_ITEM_PUZZLE10:-74
CINV_ITEM_PUZZLE11:-73
CINV_ITEM_PUZZLE12:-72
CINV_ITEM_PUZZLE1_COMBO1:-71
CINV_ITEM_PUZZLE1_COMBO2:-70
CINV_ITEM_PUZZLE2_COMBO1:-69
CINV_ITEM_PUZZLE2_COMBO2:-68
CINV_ITEM_PUZZLE3_COMBO1:-67
CINV_ITEM_PUZZLE3_COMBO2:-66
CINV_ITEM_PUZZLE4_COMBO1:-65
CINV_ITEM_PUZZLE4_COMBO2:-64
CINV_ITEM_PUZZLE5_COMBO1:-63
CINV_ITEM_PUZZLE5_COMBO2:-62
CINV_ITEM_PUZZLE6_COMBO1:-61
CINV_ITEM_PUZZLE6_COMBO2:-60
CINV_ITEM_PUZZLE7_COMBO1:-59
CINV_ITEM_PUZZLE7_COMBO2:-58
CINV_ITEM_PUZZLE8_COMBO1:-57
CINV_ITEM_PUZZLE8_COMBO2:-56
CINV_ITEM_KEY1:-55
CINV_ITEM_KEY2:-54
CINV_ITEM_KEY3:-53
CINV_ITEM_KEY4:-52
CINV_ITEM_KEY5:-51
CINV_ITEM_KEY6:-50
CINV_ITEM_KEY7:-49
CINV_ITEM_KEY8:-48
CINV_ITEM_KEY9:-47
CINV_ITEM_KEY10:-46
CINV_ITEM_KEY11:-45
CINV_ITEM_KEY12:-44
CINV_ITEM_KEY1_COMBO1:-43
CINV_ITEM_KEY1_COMBO2:-42
CINV_ITEM_KEY2_COMBO1:-41
CINV_ITEM_KEY2_COMBO2:-40
CINV_ITEM_KEY3_COMBO1:-39
CINV_ITEM_KEY3_COMBO2:-38
CINV_ITEM_KEY4_COMBO1:-37
CINV_ITEM_KEY4_COMBO2:-36
CINV_ITEM_KEY5_COMBO1:-35
CINV_ITEM_KEY5_COMBO2:-34
CINV_ITEM_KEY6_COMBO1:-33
CINV_ITEM_KEY6_COMBO2:-32
CINV_ITEM_KEY7_COMBO1:-31
CINV_ITEM_KEY7_COMBO2:-30
CINV_ITEM_KEY8_COMBO1:-29
CINV_ITEM_KEY8_COMBO2:-28
CINV_ITEM_PICKUP1:-27
CINV_ITEM_PICKUP2:-26
CINV_ITEM_PICKUP3:-25
CINV_ITEM_PICKUP4:-24
CINV_ITEM_PICKUP1_COMBO1:-23
CINV_ITEM_PICKUP1_COMBO2:-22
CINV_ITEM_PICKUP2_COMBO1:-21
CINV_ITEM_PICKUP2_COMBO2:-20
CINV_ITEM_PICKUP3_COMBO1:-19
CINV_ITEM_PICKUP3_COMBO2:-18
CINV_ITEM_PICKUP4_COMBO1:-17
CINV_ITEM_PICKUP4_COMBO2:-16
CINV_ITEM_QUEST1:-15
CINV_ITEM_QUEST2:-14
CINV_ITEM_QUEST3:-13
CINV_ITEM_QUEST4:-12
CINV_ITEM_QUEST5:-11
CINV_ITEM_QUEST6:-10
CINV_ITEM_BURNING_TORCH:-9
CINV_ITEM_CROWBAR:-8
CINV_ITEM_CLOCKWORK_BEETLE:-7
CINV_ITEM_CLOCKWORK_BEETLE_COMBO1:-6
CINV_ITEM_CLOCKWORK_BEETLE_COMBO2:-5
CINV_ITEM_EXAMINE1:-4
CINV_ITEM_EXAMINE2:-3
CINV_ITEM_EXAMINE3:-2
CINV_ITEM_NEW1:0
CINV_ITEM_NEW2:1
CINV_ITEM_NEW3:2
CINV_ITEM_NEW4:3
CINV_ITEM_NEW5:4
CINV_ITEM_NEW6:5
CINV_ITEM_NEW7:6
CINV_ITEM_NEW8:7
CINV_ITEM_NEW9:8
CINV_ITEM_NEW10:9
CINV_ITEM_NEW11:10
CINV_ITEM_NEW12:11
CINV_ITEM_NEW13:12
CINV_ITEM_NEW14:13
CINV_ITEM_NEW15:14
CINV_ITEM_NEW16:15
CINV_ITEM_NEW17:16
CINV_ITEM_NEW18:17
CINV_ITEM_NEW19:18
CINV_ITEM_NEW20:19
CINV_ITEM_NEW21:20
CINV_ITEM_NEW22:21
CINV_ITEM_NEW23:22
CINV_ITEM_NEW24:23
CINV_ITEM_NEW25:24
CINV_ITEM_NEW26:25
CINV_ITEM_NEW27:26
CINV_ITEM_NEW28:27
CINV_ITEM_NEW29:28
CINV_ITEM_NEW30:29
CINV_ITEM_NEW31:30
CINV_ITEM_NEW32:31
CINV_ITEM_NEW33:32
CINV_ITEM_NEW34:33
CINV_ITEM_NEW35:34
CINV_ITEM_NEW36:35
CINV_ITEM_NEW37:36
CINV_ITEM_NEW38:37
CINV_ITEM_NEW39:38
CINV_ITEM_NEW40:39
CINV_ITEM_NEW41:40
CINV_ITEM_NEW42:41
CINV_ITEM_NEW43:42
CINV_ITEM_NEW44:43
CINV_ITEM_NEW45:44
CINV_ITEM_NEW46:45
CINV_ITEM_NEW47:46
CINV_ITEM_NEW48:47
CINV_ITEM_NEW49:48
CINV_ITEM_NEW50:49
CINV_ITEM_NEW51:50
CINV_ITEM_NEW52:51
CINV_ITEM_NEW53:52
CINV_ITEM_NEW54:53
CINV_ITEM_NEW55:54
CINV_ITEM_NEW56:55
CINV_ITEM_NEW57:56
CINV_ITEM_NEW58:57
CINV_ITEM_NEW59:58
CINV_ITEM_NEW60:59
CINV_ITEM_NEW61:60
CINV_ITEM_NEW62:61
CINV_ITEM_NEW63:62
CINV_ITEM_NEW64:63
CINV_ITEM_NEW65:64
CINV_ITEM_NEW66:65
CINV_ITEM_NEW67:66
CINV_ITEM_NEW68:67
CINV_ITEM_NEW69:68
CINV_ITEM_NEW70:69
CINV_ITEM_NEW71:70
CINV_ITEM_NEW72:71
CINV_ITEM_NEW73:72
CINV_ITEM_NEW74:73
CINV_ITEM_NEW75:74
CINV_ITEM_NEW76:75
CINV_ITEM_NEW77:76
CINV_ITEM_NEW78:77
CINV_ITEM_NEW79:78
CINV_ITEM_NEW80:79
CINV_ITEM_NEW81:80
CINV_ITEM_NEW82:81
CINV_ITEM_NEW83:82
CINV_ITEM_NEW84:83
CINV_ITEM_NEW85:84
CINV_ITEM_NEW86:85
CINV_ITEM_NEW87:86
CINV_ITEM_NEW88:87
CINV_ITEM_NEW89:88
CINV_ITEM_NEW90:89
CINV_ITEM_NEW91:90
CINV_ITEM_NEW92:91
CINV_ITEM_NEW93:92
CINV_ITEM_NEW94:93
CINV_ITEM_NEW95:94
CINV_ITEM_NEW96:95
CINV_ITEM_NEW97:96
CINV_ITEM_NEW98:97
CINV_ITEM_NEW99:98
CINV_ITEM_NEW100:99
CINV_ITEM_NEW101:100
CINV_ITEM_NEW102:101
CINV_ITEM_NEW103:102
CINV_ITEM_NEW104:103
CINV_ITEM_NEW105:104
CINV_ITEM_NEW106:105
CINV_ITEM_NEW107:106
CINV_ITEM_NEW108:107
CINV_ITEM_NEW109:108
CINV_ITEM_NEW110:109
CINV_ITEM_NEW111:110
CINV_ITEM_NEW112:111
CINV_ITEM_NEW113:112
CINV_ITEM_NEW114:113
CINV_ITEM_NEW115:114
CINV_ITEM_NEW116:115
CINV_ITEM_NEW117:116
CINV_ITEM_NEW118:117
CINV_ITEM_NEW119:118
CINV_ITEM_NEW120:119
CINV_ITEM_NEW121:120
CINV_ITEM_NEW122:121
CINV_ITEM_NEW123:122
CINV_ITEM_NEW124:123
CINV_ITEM_NEW125:124
CINV_ITEM_NEW126:125
CINV_ITEM_NEW127:126
CINV_ITEM_NEW128:127

CINV_MODEL_IDLE:1 ;The default model that will be shown while browsing through the inventory.
CINV_MODEL_ACTIVE:2 ;The model that will be shown while an item is active in the inventory.
CINV_MODEL_PICKUP:3 ;The model that will be shown on screen when an item is picked up in game.

CINV_DISPLAY_IDLE:1 ;The display that will be used while browsing through the inventory.
CINV_DISPLAY_ACTIVE:2 ;The display that will be used while an item is active in the inventory.
CINV_DISPLAY_CONTEXT:3 ;The display that will be used during context actions, i.e. ammo and combining.
CINV_DISPLAY_EXAMINE:4 ;The display that will be used to examine an item.
CINV_DISPLAY_PICKUP:5 ;The display that will be used to show an item on screen after picking up in game.

CINV_ANIM_ACTIVATE:2 ;The animation that will be played when activating an item.
CINV_ANIM_CANCEL:3 ;The animation that will be played when cancelling an active item.
CINV_ANIM_PASSPORT_PAGE2:4 ;The animation that will be played when turning a passport to page 2.
CINV_ANIM_PASSPORT_PAGE3:5 ;The animation that will be played when turning a passport to page 3.

CINV_ACTION_USE:1
CINV_ACTION_EQUIP:2
CINV_ACTION_CHOOSE_AMMO:3
CINV_ACTION_COMBINE:4
CINV_ACTION_SEPARATE:5
CINV_ACTION_EXAMINE:6
CINV_ACTION_LOAD_GAME:7
CINV_ACTION_SAVE_GAME:8
CINV_ACTION_STATISTICS:9
CINV_ACTION_OPTIONS:10
CINV_ACTION_CONTROLS:11
CINV_ACTION_EXIT_TO_TITLE:12
CINV_ACTION_CUSTOM:13

CINV_SFX_INVENTORY_OPEN:1 ;Sound played when the inventory is opened.>>Default is MENU_SELECT.
CINV_SFX_INVENTORY_CLOSE:2 ;Sound played when the inventory is closed.>>Default is MENU_CHOOSE.
CINV_SFX_RING_ROTATE:3 ;Sound played when changing to another item.>>Default is MENU_ROTATE.
CINV_SFX_RING_CHANGE:4 ;Sound played when changing to another ring.>>Default is MENU_SELECT.
CINV_SFX_ITEM_ACTIVATE:5 ;Sound played when an item is activated.>>Default is MENU_SELECT.
CINV_SFX_ITEM_ACTIVE:6 ;Sound played while an item is active, optionally looped.
CINV_SFX_ITEM_CANCEL:7 ;Sound played when cancelling an active item.>>Default is MENU_CHOOSE.
CINV_SFX_MENU_CHANGE:8 ;Sound played when changing to another menu action.>>Default is MENU_CHOOSE.
CINV_SFX_LOAD_AMMO:9 ;Sound played when loading an ammo type.>>Default is LARA_RELOAD.
CINV_SFX_COMBINE:10 ;Sound played when two items are combined.>>Default is MENU_COMBINE.
CINV_SFX_SEPARATE:11 ;Sound played when an item is split into two.>>Default is LARA_MINI_LOCK.
CINV_SFX_FAIL:12 ;Sound played when performing an invalid action in the inventory.>>Default is LARA_NO.

CINV_DUR_INVENTORY_OPEN:1 ;The duration for opening or closing the inventory.
CINV_DUR_RING_ROTATE:2 ;The duration for changing to the next or previous item.
CINV_DUR_RING_CHANGE:3 ;The duration for moving halfway to the next or previous ring.
CINV_DUR_ITEM_ACTIVATE:4 ;The duration for activating an item.
CINV_DUR_ITEM_SPIN:5 ;The duration for a spinning item to complete one rotation.

CINV_CHEAT_HINT_NONE:1
CINV_CHEAT_HINT_COMPASS:2

CINV_TXT_RING_NAME:1 ;The text for the name of the current ring.
CINV_TXT_ITEM_NAME_IDLE:2 ;The text for the name of the current selected item.
CINV_TXT_ITEM_DESC_IDLE:3 ;The text for the description of the current selected item.
CINV_TXT_ITEM_AMMO_IDLE:4 ;The text for the loaded ammo of the current selected item.
CINV_TXT_ITEM_NAME_ACTIVE:5 ;The text for the name of the current active item.
CINV_TXT_ITEM_DESC_ACTIVE:6 ;The text for the description of the current active item.
CINV_TXT_ITEM_AMMO_ACTIVE:7 ;The text for the loaded ammo of the current active item.
CINV_TXT_EXAMINE_1:8 ;The examine text normally showing at the top.
CINV_TXT_EXAMINE_2:9 ;The examine text normally showing in the middle.
CINV_TXT_EXAMINE_3:10 ;The examine text normally showing at the bottom.
CINV_TXT_ACTION_MENU:11 ;The start of the action menu.
CINV_TXT_ACTION_MENU_HIGHLIGHT:12 ;The text for the currently selected action menu entry.
CINV_TXT_CONTEXT_ACTION:13 ;The text for context actions, e.g. COMBINE WITH.
CINV_TXT_SPECIAL_ACTION:14 ;The text for special actions, e.g. passport page actions.
CINV_TXT_NAV_UP_LEFT:15 ;The left-side glyph for navigating up.
CINV_TXT_NAV_UP_RIGHT:16 ;The right-side glyph for navigating up.
CINV_TXT_NAV_DOWN_LEFT:17 ;The left-side glyph for navigating down.
CINV_TXT_NAV_DOWN_RIGHT:18 ;The right-side glyph for navigating down.
CINV_TXT_NAV_LEFT:19 ;The glyph for navigating left.
CINV_TXT_NAV_RIGHT:20 ;The glyph for navigating right.

CINV_TXT_ALIGN_LEFT:$0000
CINV_TXT_ALIGN_CENTER:$8000
CINV_TXT_ALIGN_RIGHT:$4000

CINV_EXTRANG_STRING:359 ;Value to add to string indexes if they are ExtraNG strings.

CINV_AXIS_X:0
CINV_AXIS_Y:1
CINV_AXIS_Z:2

CINV_FALSE:0
CINV_TRUE:1

<END>
